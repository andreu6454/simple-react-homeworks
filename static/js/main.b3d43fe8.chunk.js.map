{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h6/HW6.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","style","messageBlock","src","avatar","alt","Angle","message","Name","name","messageContent","messageText","time","messageData","HW1","Affair","AffairName","affair","AffairPriority","priority","onClick","_id","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","key","Buttons","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","HW3","value","onChange","counter","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","v1","setUsers","NewUser","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checkboxZone","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","Block","Error","ErrorMessage","ErrorEmoji","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","header","link","activeClassName","active","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.b3d43fe8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageBlock\":\"Message_messageBlock__3mqFX\",\"messageContent\":\"Message_messageContent__2OkrL\",\"message\":\"Message_message__8WR15\",\"Angle\":\"Message_Angle__WusmU\",\"Name\":\"Message_Name__S8KJ9\",\"messageText\":\"Message_messageText__tMBZ7\",\"time\":\"Message_time__HOFTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1amup\",\"Block\":\"Header_Block__2U_DB\",\"link\":\"Header_link__1oUIl\",\"active\":\"Header_active__1dmn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Affair\":\"Affairs_Affair__3zOkV\",\"AffairName\":\"Affairs_AffairName__926qA\",\"AffairPriority\":\"Affairs_AffairPriority__24r30\",\"Affairs\":\"Affairs_Affairs__1vLSo\",\"Buttons\":\"Affairs_Buttons__3OA0G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"Error404_Block__swTHL\",\"Error\":\"Error404_Error__3FDQS\",\"ErrorMessage\":\"Error404_ErrorMessage__EeAsE\",\"ErrorEmoji\":\"Error404_ErrorEmoji__30--0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HW3\":\"Greeting_HW3__2UOxX\",\"error\":\"Greeting_error__1uvQ8\",\"counter\":\"Greeting_counter__2pKsv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"button\":\"SuperButton_button__cV79v\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"checkboxZone\":\"SuperCheckbox_checkboxZone__F59eZ\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HW6\":\"HW6_HW6__2dqAP\"};","import React from 'react'\nimport style from \"./Message.module.css\"\n\n\ntype MessagePropsType = {\n    name: string,\n    avatar: string,\n    message: string,\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={style.messageBlock}>\n            <img src={props.avatar} alt=\"avatar\" className=\"img-size\"></img>\n            <div className={style.Angle}></div>\n            <div className={style.message}>\n                <h5 className={style.Name}>{props.name}</h5>\n                <div className={style.messageContent}>\n                    <div className={style.messageText}>\n                        <p className={style.messageText}>{props.message}</p>\n                    </div>\n                    <div className={style.time}>\n                        <p>{props.time}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\nimport \"./Message.module.css\"\n\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport style from \"./Affairs.module.css\"\ntype AffairPropsType = {\n    _id: number\n    affair: string\n    priority: string\n    deleteAffairCallback: (_id: number) => void;\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = (_id:number) => {\n        {props.deleteAffairCallback(_id)}\n    }\n\n    return (\n        <div className={style.Affair}>\n            <div className={style.AffairName}>{props.affair}</div>\n            <div className={style.AffairPriority}>{props.priority}</div>\n            <button onClick={()=> deleteCallback(props._id)}>delete</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport style from \"./Affairs.module.css\"\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: FilterType) => void;\n    deleteAffairCallback: (_id: number) => void;\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair\n            key={a._id}\n            _id = {a._id}\n            affair={a.name}\n            priority = {a.priority}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter(\"all\")\n    }\n    const setHigh = () => {\n        props.setFilter(\"high\")\n    }\n    const setMiddle = () => {\n        props.setFilter(\"middle\")\n    }\n    const setLow = () => {\n        props.setFilter(\"low\")\n    }\n\n    return (\n        <div className={style.Affairs}>\n\n            {mappedAffairs}\n            <div className={style.Buttons}>\n                <button onClick={setAll}>All</button>\n                <button onClick={setHigh}>High</button>\n                <button onClick={setMiddle}>Middle</button>\n                <button onClick={setLow}>Low</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n\nexport type AffairPriorityType = \"low\" | \"middle\" | \"high\"\nexport type AffairType = {\n    _id: number,\n    name: string,\n    priority: FilterType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n\n\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    switch (filter){\n        case \"all\":\n            return affairs\n        case \"low\":\n            return affairs.filter(affair => affair.priority === \"low\")\n        case \"middle\":\n            return affairs.filter(affair => affair.priority === \"middle\")\n        case \"high\":\n            return affairs.filter(affair => affair.priority === \"high\")\n    }\n\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n    return affairs.filter((affair)=> affair._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport style from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n    addUser: () => void\n    error: string\n    totalUsers: number\n}\n\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers}\n) => {\n\n    return (\n        <div className={style.HW3}>\n            <input value={name} onChange={setNameCallback}/>\n            <button onClick={addUser}>add</button>\n            <span className={style.counter}>current count of names: {totalUsers}</span>\n            <div className={style.error}>{error}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType>\n    addUserCallback: (name: string) => void\n}\n\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string>('') // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        setName(e.currentTarget.value)\n    }\n    const addUser = () => {\n        if(name !== \"\"){\n            addUserCallback(name)\n            alert(\"Hello \" + name)\n            setName(\"\")\n        } else {\n            setError(\"Type correct name\")\n        }\n    }\n\n    const totalUsers = users.length\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n\nexport type UserType = {\n    _id: string\n    name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([\n        {_id: v1(), name: 'Andrey'},\n        {_id: v1(), name: 'Maks'}\n    ])\n\n    const addUserCallback = (name: string) => {\n        const NewUser: UserType = {\n            _id: v1(),\n            name: name\n        }\n        setUsers([...users,NewUser])\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className} ? ` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попа дут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.checkboxZone}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                />\n\n                <SuperInputText\n                    className={s.blue}\n                />\n\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false) // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true) // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n                        value={restProps.value}\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\nimport style from './HW6.module.css'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState<string>('editable-span-value',value))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n            <div className={style.HW6}>\n                <div>\n                    <SuperEditableSpan\n                        value={value}\n                        onChangeText={setValue}\n                        spanProps={{children: value ? undefined : 'enter text...'}}\n                    />\n                </div>\n                <SuperButton onClick={save}>save</SuperButton>\n                <SuperButton onClick={restore}>restore</SuperButton>\n\n\n            </div>\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from \"../../h6/HW6\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <h1>React homeworks:</h1>\n\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n","import React from 'react'\nimport style from './Error404.module.css'\n\nfunction Error404() {\n    return (\n        <div className={style.Block}>\n            <div className={style.Error}>404</div>\n            <div className={style.ErrorMessage}>Page not found!</div>\n            <div className={style.ErrorEmoji}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    )\n}\n\nexport default Error404\n","import React from 'react';\n\nconst Junior = () => {\n    return (\n        <div>\n            <h1> Junior </h1>\n        </div>\n    );\n};\n\nexport default Junior;","import React from 'react';\n\nconst JuniorPlus = () => {\n    return (\n        <div>\n            <h1>JuniorPlus</h1>\n        </div>\n    );\n};\n\nexport default JuniorPlus;","import React from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus'\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n                <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Routes\";\nimport style from './Header.module.css'\n\nfunction Header() {\n    return (\n        <div className={style.header}>\n            <NavLink to={PATH.PRE_JUNIOR} className={style.link} activeClassName={style.active}> pre-junior</NavLink>\n            <NavLink to={PATH.JUNIOR} className={style.link} activeClassName={style.active}>junior</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} className={style.link} activeClassName={style.active}>junior-plus</NavLink>\n            <div className={style.Block}/>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\n\n\nfunction HW5(props: any) {\n\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n                <Header/>\n\n                <Routes/>\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <HW5/>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}